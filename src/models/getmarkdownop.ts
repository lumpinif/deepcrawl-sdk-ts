/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type GetMarkdownRequest = {
  url: string;
};

/** @internal */
export const GetMarkdownRequest$inboundSchema: z.ZodType<
  GetMarkdownRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  url: z.string(),
});

/** @internal */
export type GetMarkdownRequest$Outbound = {
  url: string;
};

/** @internal */
export const GetMarkdownRequest$outboundSchema: z.ZodType<
  GetMarkdownRequest$Outbound,
  z.ZodTypeDef,
  GetMarkdownRequest
> = z.object({
  url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMarkdownRequest$ {
  /** @deprecated use `GetMarkdownRequest$inboundSchema` instead. */
  export const inboundSchema = GetMarkdownRequest$inboundSchema;
  /** @deprecated use `GetMarkdownRequest$outboundSchema` instead. */
  export const outboundSchema = GetMarkdownRequest$outboundSchema;
  /** @deprecated use `GetMarkdownRequest$Outbound` instead. */
  export type Outbound = GetMarkdownRequest$Outbound;
}

export function getMarkdownRequestToJSON(
  getMarkdownRequest: GetMarkdownRequest,
): string {
  return JSON.stringify(
    GetMarkdownRequest$outboundSchema.parse(getMarkdownRequest),
  );
}

export function getMarkdownRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetMarkdownRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetMarkdownRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetMarkdownRequest' from JSON`,
  );
}
