/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { extractLinks } from "../funcs/extractLinks.js";
import { getMarkdown } from "../funcs/getMarkdown.js";
import { readUrl } from "../funcs/readUrl.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class DeepcrawlApp extends ClientSDK {
  /**
   * Directly return page markdown content from the request URL.
   */
  async getMarkdown(
    request: operations.GetMarkdownRequest,
    options?: RequestOptions,
  ): Promise<string> {
    return unwrapAsync(getMarkdown(
      this,
      request,
      options,
    ));
  }

  /**
   * Returning full result object from the request URL.
   */
  async readUrl(
    request: operations.ReadUrlRequest,
    options?: RequestOptions,
  ): Promise<models.ReadSuccessResponse> {
    return unwrapAsync(readUrl(
      this,
      request,
      options,
    ));
  }

  /**
   * Returning extracted links sitemap results for the request URL.
   */
  async extractLinks(
    request: operations.ExtractLinksPostRequest,
    options?: RequestOptions,
  ): Promise<models.LinksPostSuccessResponse> {
    return unwrapAsync(extractLinks(
      this,
      request,
      options,
    ));
  }
}
